buildscript {
    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }

    repositories {
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'


repositories {
    flatDir {
        dirs 'libs'
    }
    maven { url 'https://maven.fabric.io/public' }
}


android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "io.agora.chatdemo"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 3303
        versionName '3.2.12'
        multiDexEnabled true
    }

    //加载资源
    Properties properties = new Properties()
    InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream() ;
    properties.load( inputStream )

    signingConfigs {
        debug {
            storeFile file(properties.getProperty('DEBUG_STORE_FILE_PATH', './keystore/sdkdemo.jks'))
            storePassword properties.getProperty('DEBUG_STORE_PASSWORD', '123456')
            keyAlias = properties.getProperty('DEBUG_KEY_ALIAS', 'easemob')
            keyPassword properties.getProperty('DEBUG_KEY_PASSWORD', '123456')
        }
        release {
            storeFile file(properties.getProperty('DEBUG_STORE_FILE_PATH', './keystore/sdkdemo.jks'))
            storePassword properties.getProperty('DEBUG_STORE_PASSWORD', '123456')
            keyAlias = properties.getProperty('DEBUG_KEY_ALIAS', 'easemob')
            keyPassword properties.getProperty('DEBUG_KEY_PASSWORD', '123456')
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            signingConfig signingConfigs.debug
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            jni.srcDirs = []
        }
    }

    lintOptions {
        abortOnError false
    }

    //use legacy for android 6.0，SDK3.6.8后移除
    //useLibrary 'org.apache.http.legacy'
    //自3.6.0开始需要java8的支持
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.13.2'
    implementation 'com.jakewharton:butterknife:10.2.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'
    // Design support already included v4 and appcompat-v7, So here on the introduction of 'design'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.multidex:multidex:2.0.1'

    implementation 'com.github.bumptech.glide:glide:3.7.0'
    // For google play server availability check.
    implementation 'com.google.android.gms:play-services-base:11.4.0'
    implementation 'com.google.android.gms:play-services-places:11.4.0'
    implementation 'com.google.android.gms:play-services-maps:11.4.0'
    // Firebase
    implementation 'com.google.firebase:firebase-messaging:11.4.0'
    implementation 'com.parse:parse-android:1.13.1'

    //implementation project(path: ':hyphenatechatsdk')
    //implementation 'io.hyphenate:hyphenate-chat:3.8.1'
    implementation('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
        transitive = true;
    }
    //migration for 'android-apt'
    implementation 'com.google.dagger:dagger:2.0'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.0'
}

apply plugin: 'com.google.gms.google-services'
